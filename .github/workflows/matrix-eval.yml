name: Test matrix with evaluation

on:
  push:

concurrency:
  group: matrix-${{ github.event_name }}-${{ github.ref }}-${{ github.event.action }}
  cancel-in-progress: true

jobs:
  create-matrix:
    runs-on: ubuntu-latest
    outputs:
      jobs1: ${{ steps.evaluate.outputs.jobs1 }}
      jobs2: ${{ steps.evaluate.outputs.jobs2 }}
    steps:
    - name: Create matrix
      id: evaluate
      run: |
          JOBS1='[{name: "job1.1", optional: true},{name: "job1.2", optional: true},{name: "job1.3", optional: false},{name: "job1.4", optional: false}]'
          JOBS2='[{name: "job2.1", optional: false}]'
          echo "jobs1=$JOBS1" >> "$GITHUB_OUTPUT"
          echo "jobs2=$JOBS2" >> "$GITHUB_OUTPUT"

  matrix-job-1:
    name: "Run 1 - ${{ matrix.name }}"
    runs-on: ubuntu-latest
    needs: [create-matrix]
    outputs:
      optional: ${{ steps.run.outputs.optional }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{fromJson( needs.create-matrix.outputs.jobs1 )}}

    steps:
    - name: Run
      id: run
      run: |
        echo "Name: ${{matrix}}"
        echo "matrix-job-1-${{strategy.job-index}}=${{matrix.optional}}" >> "$GITHUB_OUTPUT"

        # fail fail fail
        if [ ${{ matrix.name }} == "job1.1" ]; then exit 1; fi
        if [ ${{ matrix.name }} == "job1.3" ]; then exit 1; fi

        echo "${{job.status}}"

    - name: Upload
      id: upload
      if: ${{always()}}
      run: |
        echo "${{job.status}}"
        echo "${{matrix.optional}}"
  
  evaluate-job:
    name: "Evaluate"
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [matrix-job-1]

    steps:
    - name: Evaluate
      run: |
        echo "needs context: ${{ toJson(needs) }}"

        result=${{needs.*.result}}
        echo $result
        if [[ $result != "success" && $result != "skipped" ]]; then
          echo "One or more needed jobs have failed."
          exit 1
        fi