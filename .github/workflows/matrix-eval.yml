name: Test matrix with evaluation

on:
  push:

concurrency:
  group: matrix-${{ github.event_name }}-${{ github.ref }}-${{ github.event.action }}
  cancel-in-progress: true

jobs:
  create-matrix:
    runs-on: ubuntu-latest
    outputs:
      jobs1: ${{ steps.evaluate.outputs.jobs1 }}
      jobs2: ${{ steps.evaluate.outputs.jobs2 }}
    steps:
      - name: Create matrix
        id: evaluate
        run: |
          JOBS1='[{name: "job1.1", optional: true},{name: "job1.2", optional: true},{name: "job1.3", optional: false},{name: "job1.4", optional: false},{name: "job1.5", optional: false}]'
          JOBS2='[{name: "job2.1", optional: false}]'
          echo "jobs1=$JOBS1" >> "$GITHUB_OUTPUT"
          echo "jobs2=$JOBS2" >> "$GITHUB_OUTPUT"

  matrix-job-1:
    name: "Run 1 - ${{ matrix.name }}"
    runs-on: ubuntu-latest
    needs: [ create-matrix ]
    outputs:
      optional: ${{ steps.run.outputs.optional }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{fromJson( needs.create-matrix.outputs.jobs1 )}}

    steps:
      - name: Run
        id: run
        run: |
          echo "Job: ${{ toJson(matrix) }}"
          echo "matrix-job-1-${{strategy.job-index}}=${{matrix.optional}}" >> "$GITHUB_OUTPUT"
          
          # fail fail fail
          if [ ${{ matrix.name }} == "job1.1" ]; then exit 1; fi
          if [ ${{ matrix.name }} == "job1.3" ]; then exit 1; fi
          if [ ${{ matrix.name }} == "job1.5" ]; then exit 1; fi

      - name: Update status
        if: ${{ (failure() || cancelled()) && matrix.optional == false }}
        run: |
          echo "$jobs_status"
          updated_status="$jobs_statusF"
          echo "jobs_status=updated_status" >> "$GITHUB_ENV"
          echo "$jobs_status"

      - name: Create result file
        if: ${{ (failure() || cancelled()) && matrix.optional == false }}
        run: echo "${{toJson(matrix)}}" > result-matrix-job-1-${{ strategy.job-index }}-${{job.status}}.json

      - name: Upload result file
        if: ${{ (failure() || cancelled()) && matrix.optional == false }}
        uses: actions/upload-artifact@v4
        with:
          path: result-*.json
          name: result-matrix-job-1-${{ strategy.job-index }}-${{job.status}}
          if-no-files-found: warn

  evaluate-job:
    name: "Evaluate"
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [ matrix-job-1 ]

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: result-*
          merge-multiple: true
      - name: Evaluate
        run: |
          echo "$jobs_status"
          echo "needs context: ${{ toJson(needs) }}"
          
          ls -lh
          results="$(jq --slurp '.' result-*.json)"
          echo $results
          
          echo $result
          if [[ $result != "success" && $result != "skipped" ]]; then
            echo "One or more needed jobs have failed."
            exit 1
          fi