name: Test matrix

on:
  push:

concurrency:
  group: matrix-${{ github.event_name }}-${{ github.ref }}-${{ github.event.action }}
  cancel-in-progress: true

jobs:
  create-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.evaluate.outputs.matrix }}
    steps:
      - name: Create matrix
        id: evaluate
        run: |
          MATRIX='[{name: "matrix 1", id: "1"},{name: "matrix 2", id: "2"},{name: "matrix 3", id: "3"}]'
          echo "$MATRIX"
          echo "matrix=$MATRIX" >> "$GITHUB_OUTPUT"
          #          echo "matrix='[]'" >> "$GITHUB_OUTPUT"
          echo ${{ github.event_name }}
  matrix-job:
    name: "Run ${{ matrix.name }}"
    runs-on: ubuntu-latest
    needs: [ create-matrix ]
    outputs:
      evaluation: ${{ steps.evaluate.run.evaluation }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{fromJson( needs.create-matrix.outputs.matrix )}}

    steps:
      - uses: actions/checkout@v4

      - name: Set env value
        run: |
          echo "Name: ${{matrix.name}}"
          echo "Id: ${{matrix.id}}"
          if [ ${{ matrix.id }} == 1 ]; then echo "MATRIX_1=true" >> $GITHUB_ENV; fi
      #        if [[ ${{ matrix.name }} == *matrix ]]; then echo "matrix tests"; fi

      - name: Run ${{ matrix.name }} tests
        id: run
        env:
          RUN_ID: ${{ matrix.id }}
        run: |
          sleep ${{ matrix.id }}
          
          echo ${{strategy.job-index}}
          
          echo "$MATRIX_1"
          echo ${{ env.MATRIX_1 }}
          echo $RUN_ID >> metadata.json
          cat metadata.json
          
          # fail fail fail
          if [ ${{ matrix.id }} == 2 ]; then exit 1; fi
          
          # Write output
          echo "evaluation={\"key\":\"value\"}" >> "$GITHUB_OUTPUT"

  conditional-job:
    name: "Report"
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    needs: [ matrix-job ]

    steps:
      - uses: actions/checkout@v4

      - name: Notify
        run: |
          echo ${{ needs.matrix-job.result }}
  
  evaluate-job:
    name: "Evaluate"
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [ matrix-job ]

    steps:
      - name: Evaluate
        run: |
          result="${{ needs.*.result }}"
          echo $result
          echo $NEEDS_CTX
          if [[ $result != "success" && $result != "skipped" ]]; then
            echo "One or more needed jobs have failed."
            exit 1
          fi