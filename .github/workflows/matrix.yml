name: Test matrix

on:
  push:

concurrency:
  group: matrix-${{ github.event_name }}-${{ github.ref }}-${{ github.event.action }}
  cancel-in-progress: true

jobs:
  create-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.evaluate.outputs.matrix }}
    steps:
    - name: Create matrix
      id: evaluate
      run: |
          MATRIX='[{name: "pre-connection", id: "1"},{name: "post-connection", id: "2"}]'
          echo "$MATRIX"
          echo "matrix=$MATRIX" >> "$GITHUB_OUTPUT"
#          echo "matrix='[]'" >> "$GITHUB_OUTPUT"
  matrix-job:
    name: "Run with ${{ matrix.name }} matrix value"
    runs-on: ubuntu-latest
    needs: create-matrix
    strategy:
      fail-fast: false
      matrix:
        include: ${{fromJson( needs.create-matrix.outputs.matrix )}}

    steps:
    - uses: actions/checkout@v2

    - name: Set env value
      run: |
        echo "Name: ${{matrix.name}}"
        echo "Id: ${{matrix.id}}"
        if [ ${{ matrix.id }} == 1 ]; then echo "PRE_CONNECTION=true" >> $GITHUB_ENV; fi
        
        if [[ ${{ matrix.name }} == *connection ]]; then echo "connection tests"; fi

    - name: Run ${{ matrix.name }} tests
      env:
        RUN_ID: ${{ matrix.id }}
      run: |
        echo "$PRE_CONNECTION"
        echo ${{ env.PRE_CONNECTION }}
        echo $RUN_ID >> metadata.json
        cat metadata.json
        
        # fail fail fail
#        if [ ${{ matrix.id }} == 2 ]; then exit 1; fi

  conditional-job:
    name: "Report"
    runs-on: ubuntu-latest
    if: ${{ success() || failure() }}
    needs: [matrix-job]

    steps:
    - uses: actions/checkout@v2

    - name: Notify
      run: |
        echo ${{ needs.matrix-job.result }}
  
